name: Deploy

on:
  push:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:

  pyinstaller:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [windows-latest]
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
  
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: "3.12.0"
  
        - name: Set up Python environment
          run: |
            python -m pip install --upgrade pip
            pip install pipenv
            pipenv requirements --dev > requirements.txt
            pip install -r requirements.txt
            python packaging/pyinst.py
        # Signing

  
        # Package Application
  
        - name: Create windows installer
          if: matrix.os == 'windows-latest'
          uses: joncloud/makensis-action@v4
          with:
            script-file: packaging/pkg_win.nsi
            arguments: "/V3 /DVERSION=${{github.ref_name}}"
  
        # Save Packages
        - name: Extract release notes
          id: extract-release-notes
          uses: ffurrer2/extract-release-notes@v1
  
        - name: Upload as release - only tagged commits
          uses: softprops/action-gh-release@v1
          with:
            body: ${{ steps.extract-release-notes.outputs.release_notes }}
            prerelease: ${{ contains(github.ref_name, '-') }}
            files: |
              dist/*.exe
              dist/*.dmg
